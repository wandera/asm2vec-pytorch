 .name sym.func.1001248d9            .offset 00000001001248d9            .file 34cdc8fb7b23b5a66d953d8e76a1d77d520c0d69 push rbp
 mov rbp, rsp
 push r15
 push r14
 push r13
 push r12
 push rbx
 sub rsp, CONST
 mov rbx, rdi
 mov rax, qword [rip + CONST]
 mov rax, qword [rax]
 mov qword [rbp + CONST], rax
 movabs rcx, CONST
 mov r12, qword [rdi]
 mov rdx, qword [rdi + CONST]
 mov r13, rdx
 and r13, rcx
 cmp dword [r13], CONST
 cjmp LABEL18
 mov r13, qword [r13 + CONST]
LABEL18:
 mov r14, qword [r12 + CONST]
 mov rax, r14
 and rax, rcx
 cmp dword [rax], CONST
 cjmp LABEL24
 mov rax, qword [rax + CONST]
LABEL24:
 mov rdi, qword [rbx + CONST]
 test rdi, rdi
 cjmp LABEL28
 test byte [r13], CONST
 cjmp LABEL28
 xor r15d, r15d
 jmp LABEL32
LABEL28:
 mov qword [rbp + CONST], rdx
 mov qword [rbp + CONST], rax
 movups xmm0, xmmword [rbx]
 movups xmm1, xmmword [rbx + CONST]
 movaps xmmword [rbp + CONST], xmm0
 movaps xmmword [rbp + CONST], xmm1
 mov rax, qword [rbx + CONST]
 mov qword [rbp + CONST], rax
 movups xmm0, xmmword [r12]
 movups xmm1, xmmword [r12 + CONST]
 movaps xmmword [rbp + CONST], xmm0
 movaps xmmword [rbp + CONST], xmm1
 mov rax, qword [r12 + CONST]
 mov qword [rbp + CONST], rax
 mov rsi, qword [rip + CONST]
 call qword [rip + CONST]
 mov r15, rax
 mov esi, CONST
 mov rdi, rbx
 call CONST
 mov esi, CONST
 mov rdi, r12
 call CONST
 mov rsi, qword [r13 + CONST]
 mov rdi, r15
 mov rdx, rbx
 mov rcx, r12
 call CONST
 mov r15, rax
 test rax, rax
 cjmp LABEL63
 mov qword [rbp + CONST], r13
 movabs rax, CONST
 mov r13, r15
 mov r15, qword [rbp + CONST]
 and r15, rax
 and r14, rax
 mov rdi, r13
 call CONST
 or qword [rbx + CONST], r15
 mov r15, r13
 mov qword [rbp + CONST], rax
 or qword [r12 + CONST], r14
 movabs rsi, CONST
 and rsi, qword [r13 + CONST]
 cmp dword [rsi], CONST
 cjmp LABEL79
 mov rsi, qword [rsi + CONST]
LABEL79:
 mov r13, qword [rbp + CONST]
 mov rax, qword [r13 + CONST]
 test rax, rax
 mov r14, qword [rbp + CONST]
 cjmp LABEL85
 mov r9d, dword [rsi + CONST]
 mov r8d, dword [r13 + CONST]
 mov r11d, dword [rax + CONST]
 test r11, r11
 cjmp LABEL90
 mov r12, rsi
 mov edi, dword [rax]
 mov r14d, CONST
 xor ebx, ebx
 mov r10d, CONST
 mov rsi, r11
LABEL109:
 mov ebx, ebx
 cmp qword [rax + rbx + CONST], CONST
 cjmp LABEL99
 mov ecx, dword [rax + rbx + CONST]
 mov edx, CONST
 shl edx, cl
 cmp ecx, CONST
 cmove edx, r10d
 cmp r14d, edx
 cmovb r14d, edx
LABEL99:
 add ebx, edi
 dec rsi
 cjmp LABEL109
 not r8d
 add r9d, r8d
 mov ecx, r9d
 add ecx, r14d
 neg r14d
 mov r9d, r14d
 and r9d, ecx
 mov ecx, CONST
 mov rsi, r12
 mov r14, qword [rbp + CONST]
LABEL133:
 lea edx, [rcx + CONST]
 imul edx, edi
 mov rdx, qword [rax + rdx + CONST]
 test rdx, rdx
 cjmp LABEL124
 test r9d, r9d
 cjmp LABEL124
 add dword [rdx], r9d
 mov r11d, dword [rax + CONST]
LABEL124:
 cmp ecx, r11d
 cjmp LABEL130
 mov edi, dword [rax]
 inc ecx
 jmp LABEL133
LABEL63:
 mov rax, qword [rbp + CONST]
 mov qword [rbx + CONST], rax
 movaps xmm0, xmmword [rbp + CONST]
 movaps xmm1, xmmword [rbp + CONST]
 movups xmmword [rbx + CONST], xmm1
 movups xmmword [rbx], xmm0
 mov rax, qword [rbp + CONST]
 mov qword [r12 + CONST], rax
 movaps xmm0, xmmword [rbp + CONST]
 movaps xmm1, xmmword [rbp + CONST]
 movups xmmword [r12 + CONST], xmm1
 movups xmmword [r12], xmm0
 jmp LABEL32
LABEL90:
 sub r9d, r8d
LABEL130:
 cmp byte [r13], CONST
 cjmp LABEL149
 lea rcx, [rip + CONST]
 mov rdx, rcx
 jmp LABEL152
LABEL149:
 mov rcx, qword [r13 + CONST]
 mov rdx, qword [r13 + CONST]
 or dword [rsi], CONST
LABEL152:
 mov qword [rsi + CONST], rcx
 mov qword [rsi + CONST], rdx
 mov qword [rsi + CONST], rax
 mov eax, dword [r13 + CONST]
 add eax, r9d
 mov dword [rsi + CONST], eax
 add r9d, dword [r13 + CONST]
 mov dword [rsi + CONST], r9d
LABEL85:
 mov rdi, r15
 mov rsi, r13
 call CONST
 mov rdi, r14
 mov rbx, qword [rbp + CONST]
 mov rsi, rbx
 call CONST
 mov rdi, r15
 mov rsi, r13
 call CONST
 mov rdi, r14
 mov rsi, rbx
 call CONST
 mov rdi, r15
 mov rsi, r13
 call CONST
 mov rdi, r14
 mov rsi, rbx
 call CONST
 test byte [r13], CONST
 cjmp LABEL184
 mov rsi, qword [rip + CONST]
 lea rdx, [rip + CONST]
 lea rcx, [rip + CONST]
 mov rdi, r14
 call CONST
LABEL184:
 mov rdi, r15
 call CONST
LABEL32:
 mov rax, qword [rip + CONST]
 mov rax, qword [rax]
 cmp rax, qword [rbp + CONST]
 cjmp LABEL195
 mov rax, r15
 add rsp, CONST
 pop rbx
 pop r12
 pop r13
 pop r14
 pop r15
 pop rbp
 ret
LABEL195:
 call CONST
