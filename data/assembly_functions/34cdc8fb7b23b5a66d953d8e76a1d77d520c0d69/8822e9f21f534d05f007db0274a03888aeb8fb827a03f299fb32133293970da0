 .name sym.func.100125107            .offset 0000000100125107            .file 34cdc8fb7b23b5a66d953d8e76a1d77d520c0d69 push rbp
 mov rbp, rsp
 push r15
 push r14
 push rbx
 push rax
 test rdi, rdi
 cjmp LABEL7
 mov r9, rdi
 mov r10, CONST
 xor edx, edx
LABEL20:
 mov al, byte [r9 + r10 + CONST]
 cmp al, CONST
 cjmp LABEL13
 test al, al
 cjmp LABEL15
 jmp LABEL16
LABEL13:
 inc rdx
 lea rcx, [r10 + CONST]
LABEL15:
 inc r10
 jmp LABEL20
LABEL16:
 xor eax, eax
 cmp rdx, CONST
 cjmp LABEL23
 test rcx, rcx
 cjmp LABEL23
 cmp rcx, r10
 cjmp LABEL23
 lea r11, [r9 + rcx]
 inc r11
 mov r15, r10
 sub r15, rcx
 cmp rcx, CONST
 cjmp LABEL33
 mov eax, CONST
 xor eax, dword [r9]
 movzx edx, byte [r9 + CONST]
 xor edx, CONST
 or edx, eax
 cjmp LABEL39
LABEL33:
 sub r10d, ecx
 test sil, sil
 mov eax, CONST
 mov edx, CONST
 cmovne edx, eax
 lea rax, [rip + CONST]
 lea rbx, [rip + CONST]
 cmovne rbx, rax
 lea rsi, [rip + CONST]
 lea rdi, [rbp + CONST]
 mov r8d, ecx
 xor eax, eax
 push rbx
 push r11
 push r10
 push r15
 call CONST
 add rsp, CONST
 jmp LABEL58
LABEL7:
 xor eax, eax
 jmp LABEL23
LABEL39:
 sub r10d, ecx
 test sil, sil
 mov eax, CONST
 mov edx, CONST
 cmovne edx, eax
 lea rax, [rip + CONST]
 lea r14, [rip + CONST]
 cmovne r14, rax
 sub rsp, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rbp + CONST]
 mov rcx, r15
 mov r8d, r10d
 mov r9, r11
 xor eax, eax
 push r14
 call CONST
 add rsp, CONST
LABEL58:
 mov rax, qword [rbp + CONST]
LABEL23:
 add rsp, CONST
 pop rbx
 pop r14
 pop r15
 pop rbp
 ret
